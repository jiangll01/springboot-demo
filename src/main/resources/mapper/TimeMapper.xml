<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dream.order.manage.timezone.mapper.TimeMapper">
    <!--    mybatis开启二级缓存
            1、在配置类中开启mybatis的二级缓存
            2、在Mapper.xml中添加<cache/>标签
            3、对缓存的对象需要进行序列化
            针对某一个接口不想使用缓存，可以设置 <select useCache="false>
        一般的话不使用默认二级缓存，采用第三方的缓存
    -->
    <cache type="com.dream.order.common.redis.cache.RedisCache"/>
    <!--useGeneratedKeys="true" keyProperty="id"  把自增长的主键值返回给对象timeBean -->
    <insert id="insertTime" parameterType="com.dream.order.manage.timezone.bean.TimeBean" useGeneratedKeys="true"
            keyProperty="id">
        insert into timetest(time_name,created_time,updated_time) values(
            #{timeName},
            #{createdTime},
            #{updatedTime}
        )
    </insert>
    <update id="update">
        update  timetest set time_name = #{timeName}  where id = #{id}
    </update>
    <delete id="delete">
        delete from timetest where id =#{id}
    </delete>

    <select id="selectAll" resultType="com.dream.order.manage.timezone.bean.TimeBean">
        select * from timetest
    </select>

    <select id="getTime" resultType="com.dream.order.manage.timezone.bean.TimeBean">
        select * from timetest where id =#{id}
    </select>
    <select id="selectAllList" resultType="com.dream.order.manage.timezone.bean.TimeVo">
         select * from timetest
    </select>

</mapper>
